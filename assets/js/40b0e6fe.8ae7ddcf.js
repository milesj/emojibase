"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[198],{5318:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6052:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(5773),o=n(808),i=(n(7378),n(5318)),a=["components"],c={title:"Emoticons"},s=void 0,l={unversionedId:"emoticons",id:"emoticons",title:"Emoticons",description:"Emoticons, like shortcodes, are",source:"@site/docs/emoticons.md",sourceDirName:".",slug:"/emoticons",permalink:"/docs/emoticons",editUrl:"https://github.com/milesj/emojibase/edit/master/website/docs/emoticons.md",tags:[],version:"current",frontMatter:{title:"Emoticons"},sidebar:"docs",previous:{title:"Shortcodes",permalink:"/docs/shortcodes"},next:{title:"Translations",permalink:"/docs/translations"}},p={},u=[],m={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Emoticons, like shortcodes, are\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/milesj/emojibase/blob/master/packages/generator/src/resources/emoticons.ts"},"maintained and curated"),"\nfor integrity and accuracy, seeing as how there are so many variations (",(0,i.kt)("inlineCode",{parentName:"p"},":)")," vs ",(0,i.kt)("inlineCode",{parentName:"p"},"=]")," vs ",(0,i.kt)("inlineCode",{parentName:"p"},":}"),"). Do we\nsupport ",(0,i.kt)("inlineCode",{parentName:"p"},":")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"=")," for eyes? What about ",(0,i.kt)("inlineCode",{parentName:"p"},")"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"]"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"}")," for mouths? Or maybe a nose with ",(0,i.kt)("inlineCode",{parentName:"p"},"-"),"?"),(0,i.kt)("p",null,"Emojibase solves this with a set of naming guidelines and the ability to generate emoticon\npermutations. With this in place, a single emoticon can be defined per emoji, reducing the overall\nfilesize and maintenance overhead."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Only western styled emoticons are currently supported.")))}d.isMDXComponent=!0}}]);